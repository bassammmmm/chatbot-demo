services:
  backend:
    build: ./backend
    container_name: backend
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/usr/src/app
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - db
    ports:
      - "8000:8000"
    networks:
      - stack

  frontend:
    build: ./frontend
    container_name: frontend
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    command: "npm run dev"
    depends_on:
      - backend
    networks:
      - stack

  db:
    image: postgres:14
    container_name: db
    environment:
      POSTGRES_DB: chatbot_db
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - stack

volumes:
  pgdata:


networks:
  stack:
    driver: bridge
